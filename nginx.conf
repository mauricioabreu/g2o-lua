worker_processes 1;
error_log  logs/error.log info;
pid        logs/nginx.pid;

events {}

http {
  lua_package_path "/app/?.lua;;";

  init_by_lua_block { 
    require "akamai-g2o-nginx-wrapper"
  }

  server {
    listen 80;

    location /healthcheck {
      default_type text/html;
      return 200 "WORKING";
      expires -1;
      break;
    }

    location /index {
      content_by_lua_block {
        ngx.req.read_body()
        local g2o = require "g2o"
        local options = { ["key"] = "s3cr3tk3y", ["token"] = "1" }
        local headers = g2o.g2o_headers("/protected", options)
        ngx.req.set_header("X-Akamai-G2O-Auth-Sign", headers.sign)
        ngx.req.set_header("X-Akamai-G2O-Auth-Data", headers.data)
        local res = ngx.location.capture("/protected")
        if res then
          ngx.status = res.status
          ngx.print(res.body)
        end
      }
    }

    location /protected {
      content_by_lua_block {
        akamai_g2o_validate_nginx(5, "s3cr3tk3y", 30)
      }
    }
  }
}